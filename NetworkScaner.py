import scapy.all as scapy
import optparse


def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-t", "--t", dest="target", help="Target IP/ IP range.")
    (options, arguments) = parser.parse_args()
    return options


def scan(ip):
    arp_request = scapy.ARP(pdst=ip)
    # arp_request.show()
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    # broadcast.show()
    arp_request_broadcast = broadcast/arp_request
    # arp_request_broadcast.show()
    answeredList = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    # print(answeredList.summary())
    clientList = []
    for element in answeredList:
        clientDict = {"MAC": element[1].hwsrc, "IP": element[1].psrc}
        clientList.append(clientDict)
    return clientList


def print_result(result_list):
    print("IP\t\t\tMAC Address\n---------------------------------------")
    for client in result_list:
        print(client["IP"] + "\t\t" + client["MAC"])


options = get_arguments()
res = scan(options.target)
print_result(res)
